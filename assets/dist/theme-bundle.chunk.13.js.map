{"version":3,"sources":["webpack:///./assets/js/theme/search.js","webpack:///./assets/js/theme/common/models/forms.js","webpack:///./assets/js/theme/common/form-utils.js","webpack:///./assets/js/theme/common/url-utils.js","webpack:///./assets/js/theme/catalog.js","webpack:///./assets/js/theme/common/faceted-search.js"],"names":["Search","_CatalogPage","apply","arguments","_proto","prototype","formatCategoryTreeForJSTree","node","_this","nodeData","text","data","id","metadata","state","selected","opened","children","forEach","childNode","push","showProducts","navigate","this","$productListingContainer","removeClass","$facetedSearchContainer","$contentResultsContainer","addClass","$","searchData","url","count","urlUtils","replaceParams","page","goToUrl","showContent","onReady","_this2","compareProducts","context","urls","$searchForm","$categoryTreeContainer","find","Url","parse","window","location","href","treeData","length","initFacetedSearch","onSortBySubmit","bind","hooks","on","collapsibleFactory","event","preventDefault","query","section","validator","initValidation","bindValidation","categoryTree","categoryTreeData","createCategoryTree","selectedCategoryIds","jstree","get_selected","check","remove","_step","_iterator","_createForOfIteratorHelperLoose","done","categoryId","value","input","type","name","append","loadTreeNodes","cb","_this3","ajax","selectedCategoryId","prefix","headers","BCData","csrf_token","formattedResults","dataNode","$container","_this4","treeOptions","core","themes","icons","checkbox","three_state","plugins","_this5","$contentListingContainer","$searchHeading","$searchCount","$contentCount","requestOptions","template","productListing","contentListing","sidebar","heading","productCount","contentCount","config","product_results","limit","searchProductsPerPage","showMore","facetedSearch","FacetedSearch","content","html","triggerHandler","animate","scrollTop","$form","nod","submit","$element","add","selector","validate","errorMessage","performCheck","areAll","CatalogPage","forms","email","test","password","notEmpty","inputTagNames","classifyForm","formSelector","options","$inputs","join","_options$formFieldCla","formFieldClass","each","__","specificClassName","$input","$formField","parent","tagName","prop","toLowerCase","className","inputType","_includes","_camelCase","_capitalize","classifyInput","insertStateHiddenField","$stateField","stateFieldAttrs","$field","fieldId","match","getFieldId","after","Validators","setEmailValidation","field","val","setPasswordValidation","passwordSelector","password2Selector","requirements","isOptional","$password","passwordValidations","result","RegExp","alpha","numeric","minlength","error","setMinMaxPriceValidation","selectors","errorSelector","fieldsetSelector","maxPriceSelector","minPriceSelector","configure","form","preventSubmit","successClass","setMessageOptions","errorSpan","setStateCountryValidation","cleanUpStateValidation","$fieldClassElement","Object","keys","classes","hasClass","getUrl","pathname","search","history","pushState","document","title","trigger","params","param","parsed","hasOwnProperty","format","buildQueryString","queryData","key","out","Array","isArray","ndx","substring","parseQueryParams","i","temp","split","_PageManager","queryParams","currentTarget","serialize","PageManager","callback","defaultOptions","accordionToggleSelector","blockerSelector","clearFacetSelector","componentSelector","facetNavListSelector","priceRangeErrorSelector","priceRangeFieldsetSelector","priceRangeFormSelector","priceRangeMaxPriceSelector","priceRangeMinPriceSelector","showMoreToggleSelector","facetedSearchFilterItems","modal","modalFactory","modalOpen","_extend","collapsedFacets","collapsedFacetItems","initPriceValidator","index","navList","collapseFacetItems","accordionToggle","collapsible","isCollapsed","targetId","setTimeout","is","collapseAllFacets","onStateChange","onToggleClick","onAccordionToggle","onClearFacet","onFacetClick","onRangeSubmit","filterFacetItems","bindEvents","refreshView","restoreCollapsedFacets","restoreCollapsedFacetItems","updateView","show","api","getPage","err","hide","Error","expandFacetItems","$navList","attr","_without","hasMoreResults","_union","toggleFacetItems","getMoreFacetResults","facet","facetUrl","list_all","response","open","updateContent","$items","element","indexOf","expandFacet","$accordionToggle","collapseFacet","close","expandAllFacets","priceRangeValidator","_this6","_this7","unbindEvents","onPopState","off","stopPropagation","$toggle","$link","toggleClass","urlQueryParams","assign","constants","VALID","decodeURI","currentUrl","URLSearchParams","has","updatedLinkUrl","replace","replaceState"],"mappings":"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","file":"theme-bundle.chunk.13.js","sourcesContent":["import { hooks } from '@bigcommerce/stencil-utils';\r\nimport CatalogPage from './catalog';\r\nimport FacetedSearch from './common/faceted-search';\r\nimport compareProducts from './global/compare-products';\r\nimport urlUtils from './common/url-utils';\r\nimport Url from 'url';\r\nimport collapsibleFactory from './common/collapsible';\r\nimport 'jstree';\r\nimport nod from './common/nod';\r\n\r\nexport default class Search extends CatalogPage {\r\n    formatCategoryTreeForJSTree(node) {\r\n        const nodeData = {\r\n            text: node.data,\r\n            id: node.metadata.id,\r\n            state: {\r\n                selected: node.selected,\r\n            },\r\n        };\r\n\r\n        if (node.state) {\r\n            nodeData.state.opened = node.state === 'open';\r\n            nodeData.children = true;\r\n        }\r\n\r\n        if (node.children) {\r\n            nodeData.children = [];\r\n            node.children.forEach((childNode) => {\r\n                nodeData.children.push(this.formatCategoryTreeForJSTree(childNode));\r\n            });\r\n        }\r\n\r\n        return nodeData;\r\n    }\r\n\r\n    showProducts(navigate = true) {\r\n        this.$productListingContainer.removeClass('u-hiddenVisually');\r\n        this.$facetedSearchContainer.removeClass('u-hiddenVisually');\r\n        this.$contentResultsContainer.addClass('u-hiddenVisually');\r\n\r\n        $('[data-content-results-toggle]').removeClass('navBar-action-color--active');\r\n        $('[data-content-results-toggle]').addClass('navBar-action');\r\n\r\n        $('[data-product-results-toggle]').removeClass('navBar-action');\r\n        $('[data-product-results-toggle]').addClass('navBar-action-color--active');\r\n\r\n        if (!navigate) {\r\n            return;\r\n        }\r\n\r\n        const searchData = $('#search-results-product-count span').data();\r\n        const url = (searchData.count > 0) ? searchData.url : urlUtils.replaceParams(searchData.url, {\r\n            page: 1,\r\n        });\r\n\r\n        urlUtils.goToUrl(url);\r\n    }\r\n\r\n    showContent(navigate = true) {\r\n        this.$contentResultsContainer.removeClass('u-hiddenVisually');\r\n        this.$productListingContainer.addClass('u-hiddenVisually');\r\n        this.$facetedSearchContainer.addClass('u-hiddenVisually');\r\n\r\n        $('[data-product-results-toggle]').removeClass('navBar-action-color--active');\r\n        $('[data-product-results-toggle]').addClass('navBar-action');\r\n\r\n        $('[data-content-results-toggle]').removeClass('navBar-action');\r\n        $('[data-content-results-toggle]').addClass('navBar-action-color--active');\r\n\r\n        if (!navigate) {\r\n            return;\r\n        }\r\n\r\n        const searchData = $('#search-results-content-count span').data();\r\n        const url = (searchData.count > 0) ? searchData.url : urlUtils.replaceParams(searchData.url, {\r\n            page: 1,\r\n        });\r\n\r\n        urlUtils.goToUrl(url);\r\n    }\r\n\r\n    onReady() {\r\n        compareProducts(this.context.urls);\r\n\r\n        const $searchForm = $('[data-advanced-search-form]');\r\n        const $categoryTreeContainer = $searchForm.find('[data-search-category-tree]');\r\n        const url = Url.parse(window.location.href, true);\r\n        const treeData = [];\r\n        this.$productListingContainer = $('#product-listing-container');\r\n        this.$facetedSearchContainer = $('#faceted-search-container');\r\n        this.$contentResultsContainer = $('#search-results-content');\r\n\r\n        // Init faceted search\r\n        if ($('#facetedSearch').length > 0) {\r\n            this.initFacetedSearch();\r\n        } else {\r\n            this.onSortBySubmit = this.onSortBySubmit.bind(this);\r\n            hooks.on('sortBy-submitted', this.onSortBySubmit);\r\n        }\r\n\r\n        // Init collapsibles\r\n        collapsibleFactory();\r\n\r\n        $('[data-product-results-toggle]').on('click', event => {\r\n            event.preventDefault();\r\n            this.showProducts();\r\n        });\r\n\r\n        $('[data-content-results-toggle]').on('click', event => {\r\n            event.preventDefault();\r\n            this.showContent();\r\n        });\r\n\r\n        if (this.$productListingContainer.find('li.product').length === 0 || url.query.section === 'content') {\r\n            this.showContent(false);\r\n        } else {\r\n            this.showProducts(false);\r\n        }\r\n\r\n        const validator = this.initValidation($searchForm)\r\n            .bindValidation($searchForm.find('#search_query_adv'));\r\n\r\n        this.context.categoryTree.forEach((node) => {\r\n            treeData.push(this.formatCategoryTreeForJSTree(node));\r\n        });\r\n\r\n        this.categoryTreeData = treeData;\r\n        this.createCategoryTree($categoryTreeContainer);\r\n\r\n        $searchForm.on('submit', event => {\r\n            const selectedCategoryIds = $categoryTreeContainer.jstree().get_selected();\r\n\r\n            if (!validator.check()) {\r\n                return event.preventDefault();\r\n            }\r\n\r\n            $searchForm.find('input[name=\"category\\[\\]\"]').remove();\r\n\r\n            for (const categoryId of selectedCategoryIds) {\r\n                const input = $('<input>', {\r\n                    type: 'hidden',\r\n                    name: 'category[]',\r\n                    value: categoryId,\r\n                });\r\n\r\n                $searchForm.append(input);\r\n            }\r\n        });\r\n    }\r\n\r\n    loadTreeNodes(node, cb) {\r\n        $.ajax({\r\n            url: '/remote/v1/category-tree',\r\n            data: {\r\n                selectedCategoryId: node.id,\r\n                prefix: 'category',\r\n            },\r\n            headers: {\r\n                'x-xsrf-token': window.BCData && window.BCData.csrf_token ? window.BCData.csrf_token : '',\r\n            },\r\n        }).done(data => {\r\n            const formattedResults = [];\r\n\r\n            data.forEach((dataNode) => {\r\n                formattedResults.push(this.formatCategoryTreeForJSTree(dataNode));\r\n            });\r\n\r\n            cb(formattedResults);\r\n        });\r\n    }\r\n\r\n    createCategoryTree($container) {\r\n        const treeOptions = {\r\n            core: {\r\n                data: (node, cb) => {\r\n                    // Root node\r\n                    if (node.id === '#') {\r\n                        cb(this.categoryTreeData);\r\n                    } else {\r\n                        // Lazy loaded children\r\n                        this.loadTreeNodes(node, cb);\r\n                    }\r\n                },\r\n                themes: {\r\n                    icons: true,\r\n                },\r\n            },\r\n            checkbox: {\r\n                three_state: false,\r\n            },\r\n            plugins: [\r\n                'checkbox',\r\n            ],\r\n        };\r\n\r\n        $container.jstree(treeOptions);\r\n    }\r\n\r\n    initFacetedSearch() {\r\n        const $productListingContainer = $('#product-listing-container');\r\n        const $contentListingContainer = $('#search-results-content');\r\n        const $facetedSearchContainer = $('#faceted-search-container');\r\n        const $searchHeading = $('#search-results-heading');\r\n        const $searchCount = $('#search-results-product-count');\r\n        const $contentCount = $('#search-results-content-count');\r\n        const productsPerPage = this.context.searchProductsPerPage;\r\n        const requestOptions = {\r\n            template: {\r\n                productListing: 'search/product-listing',\r\n                contentListing: 'search/content-listing',\r\n                sidebar: 'search/sidebar',\r\n                heading: 'search/heading',\r\n                productCount: 'search/product-count',\r\n                contentCount: 'search/content-count',\r\n            },\r\n            config: {\r\n                product_results: {\r\n                    limit: productsPerPage,\r\n                },\r\n            },\r\n            showMore: 'search/show-more',\r\n        };\r\n\r\n        this.facetedSearch = new FacetedSearch(requestOptions, (content) => {\r\n            $searchHeading.html(content.heading);\r\n\r\n            const url = Url.parse(window.location.href, true);\r\n            if (url.query.section === 'content') {\r\n                $contentListingContainer.html(content.contentListing);\r\n                $contentCount.html(content.contentCount);\r\n                this.showContent(false);\r\n            } else {\r\n                $productListingContainer.html(content.productListing);\r\n                $facetedSearchContainer.html(content.sidebar);\r\n                $searchCount.html(content.productCount);\r\n                this.showProducts(false);\r\n            }\r\n\r\n            $('body').triggerHandler('compareReset');\r\n\r\n            $('html, body').animate({\r\n                scrollTop: 0,\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    initValidation($form) {\r\n        this.$form = $form;\r\n        this.validator = nod({\r\n            submit: $form,\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    bindValidation($element) {\r\n        if (this.validator) {\r\n            this.validator.add({\r\n                selector: $element,\r\n                validate: 'presence',\r\n                errorMessage: $element.data('errorMessage'),\r\n            });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    check() {\r\n        if (this.validator) {\r\n            this.validator.performCheck();\r\n            return this.validator.areAll('valid');\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","const forms = {\n    email(value) {\n        const re = /^.+@.+\\..+/;\n        return re.test(value);\n    },\n\n    /**\n     * Validates a password field\n     * @param value\n     * @returns {boolean}\n     */\n    password(value) {\n        return this.notEmpty(value);\n    },\n\n    /**\n     * validates if a field is empty\n     * @param value\n     * @returns {boolean}\n     *\n     */\n    notEmpty(value) {\n        return value.length > 0;\n    },\n};\n\nexport default forms;\n","import _ from 'lodash';\nimport nod from './nod';\nimport forms from './models/forms';\n\nconst inputTagNames = [\n    'input',\n    'select',\n    'textarea',\n];\n\n/**\n * Apply class name to an input element on its type\n * @param {object} input\n * @param {string} formFieldClass\n * @return {object} Element itself\n */\nfunction classifyInput(input, formFieldClass) {\n    const $input = $(input);\n    const $formField = $input.parent(`.${formFieldClass}`);\n    const tagName = $input.prop('tagName').toLowerCase();\n\n    let className = `${formFieldClass}--${tagName}`;\n    let specificClassName;\n\n    // Input can be text/checkbox/radio etc...\n    if (tagName === 'input') {\n        const inputType = $input.prop('type');\n\n        if (_.includes(['radio', 'checkbox', 'submit'], inputType)) {\n            // ie: .form-field--checkbox, .form-field--radio\n            className = `${formFieldClass}--${_.camelCase(inputType)}`;\n        } else {\n            // ie: .form-field--input .form-field--inputText\n            specificClassName = `${className}${_.capitalize(inputType)}`;\n        }\n    }\n\n    // Apply class modifier\n    return $formField\n        .addClass(className)\n        .addClass(specificClassName);\n}\n\n/**\n * Apply class name to each input element in a form based on its type\n * @example\n * // Before\n * <form id=\"form\">\n *     <div class=\"form-field\">\n *         <input type=\"text\">\n *     </div>\n *     <div class=\"form-field\">\n *         <select>...</select>\n *     </div>\n * </form>\n *\n * classifyForm('#form', { formFieldClass: 'form-field' });\n *\n * // After\n * <div class=\"form-field form-field--input form-field--inputText\">...</div>\n * <div class=\"form-field form-field--select\">...</div>\n *\n * @param {string|object} formSelector - selector or element\n * @param {object} options\n * @return {jQuery} Element itself\n */\nexport function classifyForm(formSelector, options = {}) {\n    const $form = $(formSelector);\n    const $inputs = $form.find(inputTagNames.join(', '));\n\n    // Obtain options\n    const { formFieldClass = 'form-field' } = options;\n\n    // Classify each input in a form\n    $inputs.each((__, input) => {\n        classifyInput(input, formFieldClass);\n    });\n\n    return $form;\n}\n\n/**\n * Get id from given field\n * @param {object} $field JQuery field object\n * @return {string}\n */\nfunction getFieldId($field) {\n    const fieldId = $field.prop('name').match(/(\\[.*\\])/);\n\n    if (fieldId && fieldId.length !== 0) {\n        return fieldId[0];\n    }\n\n    return '';\n}\n\n/**\n * Insert hidden field after State/Province field\n * @param {object} $stateField JQuery field object\n */\nfunction insertStateHiddenField($stateField) {\n    const fieldId = getFieldId($stateField);\n    const stateFieldAttrs = {\n        type: 'hidden',\n        name: `FormFieldIsText${fieldId}`,\n        value: '1',\n    };\n\n    $stateField.after($('<input />', stateFieldAttrs));\n}\n\nconst Validators = {\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     */\n    setEmailValidation: (validator, field) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: (cb, val) => {\n                    const result = forms.email(val);\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a valid email.',\n            });\n        }\n    },\n\n    /**\n     * Validate password fields\n     * @param validator\n     * @param passwordSelector\n     * @param password2Selector\n     * @param requirements\n     * @param isOptional\n     */\n    setPasswordValidation: (validator, passwordSelector, password2Selector, requirements, isOptional) => {\n        const $password = $(passwordSelector);\n        const passwordValidations = [\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a password.',\n            },\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.match(new RegExp(requirements.alpha))\n                        && val.match(new RegExp(requirements.numeric))\n                        && val.length >= requirements.minlength;\n\n                    // If optional and nothing entered, it is valid\n                    if (isOptional && val.length === 0) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: requirements.error,\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a password.',\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val === $password.val();\n\n                    cb(result);\n                },\n                errorMessage: 'Your passwords do not match.',\n            },\n        ];\n\n        validator.add(passwordValidations);\n    },\n\n    /**\n     * Validate password fields\n     * @param {Nod} validator\n     * @param {Object} selectors\n     * @param {string} selectors.errorSelector\n     * @param {string} selectors.fieldsetSelector\n     * @param {string} selectors.formSelector\n     * @param {string} selectors.maxPriceSelector\n     * @param {string} selectors.minPriceSelector\n     */\n    setMinMaxPriceValidation: (validator, selectors) => {\n        const {\n            errorSelector,\n            fieldsetSelector,\n            formSelector,\n            maxPriceSelector,\n            minPriceSelector,\n        } = selectors;\n\n        validator.configure({\n            form: formSelector,\n            preventSubmit: true,\n            successClass: '_', // KLUDGE: Don't apply success class\n        });\n\n        validator.add({\n            errorMessage: 'Min price must be less than max. price.',\n            selector: minPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: 'Min price must be less than max. price.',\n            selector: maxPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: 'Max. price is required.',\n            selector: maxPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: 'Min. price is required.',\n            selector: minPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: 'Input must be greater than 0.',\n            selector: [minPriceSelector, maxPriceSelector],\n            validate: 'min-number:0',\n        });\n\n        validator.setMessageOptions({\n            selector: [minPriceSelector, maxPriceSelector],\n            parent: fieldsetSelector,\n            errorSpan: errorSelector,\n        });\n    },\n\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     */\n    setStateCountryValidation: (validator, field) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: 'presence',\n                errorMessage: 'The \\'State/Province\\' field cannot be blank.',\n            });\n        }\n    },\n\n    /**\n     * Removes classes from dirty form if previously checked\n     * @param field\n     */\n    cleanUpStateValidation: (field) => {\n        const $fieldClassElement = $((`[data-type=\"${field.data('fieldType')}\"]`));\n\n        Object.keys(nod.classes).forEach((value) => {\n            if ($fieldClassElement.hasClass(nod.classes[value])) {\n                $fieldClassElement.removeClass(nod.classes[value]);\n            }\n        });\n    },\n};\n\nexport { Validators, insertStateHiddenField };\n","import Url from 'url';\n\nconst urlUtils = {\n    getUrl: () => `${window.location.pathname}${window.location.search}`,\n\n    goToUrl: (url) => {\n        window.history.pushState({}, document.title, url);\n        $(window).trigger('statechange');\n    },\n\n    replaceParams: (url, params) => {\n        const parsed = Url.parse(url, true);\n        let param;\n\n        // Let the formatter use the query object to build the new url\n        parsed.search = null;\n\n        for (param in params) {\n            if (params.hasOwnProperty(param)) {\n                parsed.query[param] = params[param];\n            }\n        }\n\n        return Url.format(parsed);\n    },\n\n    buildQueryString: (queryData) => {\n        let out = '';\n        let key;\n        for (key in queryData) {\n            if (queryData.hasOwnProperty(key)) {\n                if (Array.isArray(queryData[key])) {\n                    let ndx;\n\n                    for (ndx in queryData[key]) {\n                        if (queryData[key].hasOwnProperty(ndx)) {\n                            out += `&${key}=${queryData[key][ndx]}`;\n                        }\n                    }\n                } else {\n                    out += `&${key}=${queryData[key]}`;\n                }\n            }\n        }\n\n        return out.substring(1);\n    },\n\n    parseQueryParams: (queryData) => {\n        const params = {};\n\n        for (let i = 0; i < queryData.length; i++) {\n            const temp = queryData[i].split('=');\n\n            if (temp[0] in params) {\n                if (Array.isArray(params[temp[0]])) {\n                    params[temp[0]].push(temp[1]);\n                } else {\n                    params[temp[0]] = [params[temp[0]], temp[1]];\n                }\n            } else {\n                params[temp[0]] = temp[1];\n            }\n        }\n\n        return params;\n    },\n};\n\nexport default urlUtils;\n","import PageManager from './page-manager';\nimport urlUtils from './common/url-utils';\nimport Url from 'url';\n\nexport default class CatalogPage extends PageManager {\n    onSortBySubmit(event) {\n        const url = Url.parse(window.location.href, true);\n        const queryParams = $(event.currentTarget).serialize().split('=');\n\n        url.query[queryParams[0]] = queryParams[1];\n        delete url.query.page;\n\n        event.preventDefault();\n        window.location = Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) });\n    }\n}\n","import { hooks, api } from '@bigcommerce/stencil-utils';\r\nimport _ from 'lodash';\r\nimport Url from 'url';\r\nimport urlUtils from './url-utils';\r\nimport modalFactory from '../global/modal';\r\nimport collapsibleFactory from './collapsible';\r\nimport { Validators } from './form-utils';\r\nimport nod from './nod';\r\n\r\n/**\r\n * Faceted search view component\r\n */\r\nclass FacetedSearch {\r\n    /**\r\n     * @param {object} requestOptions - Object with options for the ajax requests\r\n     * @param {function} callback - Function to execute after fetching templates\r\n     * @param {object} options - Configurable options\r\n     * @example\r\n     *\r\n     * let requestOptions = {\r\n     *      templates: {\r\n     *          productListing: 'category/product-listing',\r\n     *          sidebar: 'category/sidebar'\r\n     *     }\r\n     * };\r\n     *\r\n     * let templatesDidLoad = function(content) {\r\n     *     $productListingContainer.html(content.productListing);\r\n     *     $facetedSearchContainer.html(content.sidebar);\r\n     * };\r\n     *\r\n     * let facetedSearch = new FacetedSearch(requestOptions, templatesDidLoad);\r\n     */\r\n    constructor(requestOptions, callback, options) {\r\n        const defaultOptions = {\r\n            accordionToggleSelector: '#facetedSearch .accordion-navigation, #facetedSearch .facetedSearch-toggle',\r\n            blockerSelector: '#facetedSearch .blocker',\r\n            clearFacetSelector: '#facetedSearch .facetedSearch-clearLink',\r\n            componentSelector: '#facetedSearch-navList',\r\n            facetNavListSelector: '#facetedSearch .navList',\r\n            priceRangeErrorSelector: '#facet-range-form .form-inlineMessage',\r\n            priceRangeFieldsetSelector: '#facet-range-form .form-fieldset',\r\n            priceRangeFormSelector: '#facet-range-form',\r\n            priceRangeMaxPriceSelector: '#facet-range-form [name=max_price]',\r\n            priceRangeMinPriceSelector: '#facet-range-form [name=min_price]',\r\n            showMoreToggleSelector: '#facetedSearch .accordion-content .toggleLink',\r\n            facetedSearchFilterItems: '#facetedSearch-filterItems .form-input',\r\n            modal: modalFactory('#modal')[0],\r\n            modalOpen: false,\r\n        };\r\n\r\n        // Private properties\r\n        this.requestOptions = requestOptions;\r\n        this.callback = callback;\r\n        this.options = _.extend({}, defaultOptions, options);\r\n        this.collapsedFacets = [];\r\n        this.collapsedFacetItems = [];\r\n\r\n        // Init collapsibles\r\n        collapsibleFactory();\r\n\r\n        // Init price validator\r\n        this.initPriceValidator();\r\n\r\n        // Show limited items by default\r\n        $(this.options.facetNavListSelector).each((index, navList) => {\r\n            this.collapseFacetItems($(navList));\r\n        });\r\n\r\n        // Mark initially collapsed accordions\r\n        $(this.options.accordionToggleSelector).each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n            const collapsible = $accordionToggle.data('collapsibleInstance');\r\n\r\n            if (collapsible.isCollapsed) {\r\n                this.collapsedFacets.push(collapsible.targetId);\r\n            }\r\n        });\r\n\r\n        // Collapse all facets if initially hidden\r\n        // NOTE: Need to execute after Collapsible gets bootstrapped\r\n        setTimeout(() => {\r\n            if ($(this.options.componentSelector).is(':hidden')) {\r\n                this.collapseAllFacets();\r\n            }\r\n        });\r\n\r\n        // Observe user events\r\n        this.onStateChange = this.onStateChange.bind(this);\r\n        this.onToggleClick = this.onToggleClick.bind(this);\r\n        this.onAccordionToggle = this.onAccordionToggle.bind(this);\r\n        this.onClearFacet = this.onClearFacet.bind(this);\r\n        this.onFacetClick = this.onFacetClick.bind(this);\r\n        this.onRangeSubmit = this.onRangeSubmit.bind(this);\r\n        this.onSortBySubmit = this.onSortBySubmit.bind(this);\r\n        this.filterFacetItems = this.filterFacetItems.bind(this);\r\n\r\n        this.bindEvents();\r\n    }\r\n\r\n    // Public methods\r\n    refreshView(content) {\r\n        if (content) {\r\n            this.callback(content);\r\n        }\r\n\r\n        // Init collapsibles\r\n        collapsibleFactory();\r\n\r\n        // Init price validator\r\n        this.initPriceValidator();\r\n\r\n        // Restore view state\r\n        this.restoreCollapsedFacets();\r\n        this.restoreCollapsedFacetItems();\r\n\r\n        // Bind events\r\n        this.bindEvents();\r\n    }\r\n\r\n    updateView() {\r\n        $(this.options.blockerSelector).show();\r\n\r\n        api.getPage(urlUtils.getUrl(), this.requestOptions, (err, content) => {\r\n            $(this.options.blockerSelector).hide();\r\n\r\n            if (err) {\r\n                throw new Error(err);\r\n            }\r\n\r\n            // Refresh view with new content\r\n            this.refreshView(content);\r\n        });\r\n    }\r\n\r\n    expandFacetItems($navList) {\r\n        const id = $navList.attr('id');\r\n\r\n        // Remove\r\n        this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\r\n    }\r\n\r\n    collapseFacetItems($navList) {\r\n        const id = $navList.attr('id');\r\n        const hasMoreResults = $navList.data('hasMoreResults');\r\n\r\n        if (hasMoreResults) {\r\n            this.collapsedFacetItems = _.union(this.collapsedFacetItems, [id]);\r\n        } else {\r\n            this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\r\n        }\r\n    }\r\n\r\n    toggleFacetItems($navList) {\r\n        const id = $navList.attr('id');\r\n\r\n        // Toggle depending on `collapsed` flag\r\n        if (_.includes(this.collapsedFacetItems, id)) {\r\n            this.getMoreFacetResults($navList);\r\n\r\n            return true;\r\n        }\r\n\r\n        this.collapseFacetItems($navList);\r\n\r\n        return false;\r\n    }\r\n\r\n    getMoreFacetResults($navList) {\r\n        const facet = $navList.data('facet');\r\n        const facetUrl = urlUtils.getUrl();\r\n\r\n        if (this.requestOptions.showMore) {\r\n            api.getPage(facetUrl, {\r\n                template: this.requestOptions.showMore,\r\n                params: {\r\n                    list_all: facet,\r\n                },\r\n            }, (err, response) => {\r\n                if (err) {\r\n                    throw new Error(err);\r\n                }\r\n\r\n                this.options.modal.open();\r\n                this.options.modalOpen = true;\r\n                this.options.modal.updateContent(response);\r\n            });\r\n        }\r\n\r\n        this.collapseFacetItems($navList);\r\n\r\n        return false;\r\n    }\r\n\r\n    filterFacetItems(event) {\r\n        const $items = $('.navList-item');\r\n        const query = $(event.currentTarget).val().toLowerCase();\r\n\r\n        $items.each((index, element) => {\r\n            const text = $(element).text().toLowerCase();\r\n            if (text.indexOf(query) !== -1) {\r\n                $(element).show();\r\n            } else {\r\n                $(element).hide();\r\n            }\r\n        });\r\n    }\r\n\r\n    expandFacet($accordionToggle) {\r\n        const collapsible = $accordionToggle.data('collapsibleInstance');\r\n\r\n        collapsible.open();\r\n    }\r\n\r\n    collapseFacet($accordionToggle) {\r\n        const collapsible = $accordionToggle.data('collapsibleInstance');\r\n\r\n        collapsible.close();\r\n    }\r\n\r\n    collapseAllFacets() {\r\n        const $accordionToggles = $(this.options.accordionToggleSelector);\r\n\r\n        $accordionToggles.each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n\r\n            this.collapseFacet($accordionToggle);\r\n        });\r\n    }\r\n\r\n    expandAllFacets() {\r\n        const $accordionToggles = $(this.options.accordionToggleSelector);\r\n\r\n        $accordionToggles.each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n\r\n            this.expandFacet($accordionToggle);\r\n        });\r\n    }\r\n\r\n    // Private methods\r\n    initPriceValidator() {\r\n        if ($(this.options.priceRangeFormSelector).length === 0) {\r\n            return;\r\n        }\r\n\r\n        const validator = nod();\r\n        const selectors = {\r\n            errorSelector: this.options.priceRangeErrorSelector,\r\n            fieldsetSelector: this.options.priceRangeFieldsetSelector,\r\n            formSelector: this.options.priceRangeFormSelector,\r\n            maxPriceSelector: this.options.priceRangeMaxPriceSelector,\r\n            minPriceSelector: this.options.priceRangeMinPriceSelector,\r\n        };\r\n\r\n        Validators.setMinMaxPriceValidation(validator, selectors);\r\n\r\n        this.priceRangeValidator = validator;\r\n    }\r\n\r\n    restoreCollapsedFacetItems() {\r\n        const $navLists = $(this.options.facetNavListSelector);\r\n\r\n        // Restore collapsed state for each facet\r\n        $navLists.each((index, navList) => {\r\n            const $navList = $(navList);\r\n            const id = $navList.attr('id');\r\n            const shouldCollapse = _.includes(this.collapsedFacetItems, id);\r\n\r\n            if (shouldCollapse) {\r\n                this.collapseFacetItems($navList);\r\n            } else {\r\n                this.expandFacetItems($navList);\r\n            }\r\n        });\r\n    }\r\n\r\n    restoreCollapsedFacets() {\r\n        const $accordionToggles = $(this.options.accordionToggleSelector);\r\n\r\n        $accordionToggles.each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n            const collapsible = $accordionToggle.data('collapsibleInstance');\r\n            const id = collapsible.targetId;\r\n            const shouldCollapse = _.includes(this.collapsedFacets, id);\r\n\r\n            if (shouldCollapse) {\r\n                this.collapseFacet($accordionToggle);\r\n            } else {\r\n                this.expandFacet($accordionToggle);\r\n            }\r\n        });\r\n    }\r\n\r\n    bindEvents() {\r\n        // Clean-up\r\n        this.unbindEvents();\r\n\r\n        // DOM events\r\n        $(window).on('statechange', this.onStateChange);\r\n        $(window).on('popstate', this.onPopState);\r\n        $(document).on('click', this.options.showMoreToggleSelector, this.onToggleClick);\r\n        $(document).on('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\r\n        $(document).on('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\r\n        $(this.options.clearFacetSelector).on('click', this.onClearFacet);\r\n\r\n        // Hooks\r\n        hooks.on('facetedSearch-facet-clicked', this.onFacetClick);\r\n        hooks.on('facetedSearch-range-submitted', this.onRangeSubmit);\r\n        hooks.on('sortBy-submitted', this.onSortBySubmit);\r\n    }\r\n\r\n    unbindEvents() {\r\n        // DOM events\r\n        $(window).off('statechange', this.onStateChange);\r\n        $(window).off('popstate', this.onPopState);\r\n        $(document).off('click', this.options.showMoreToggleSelector, this.onToggleClick);\r\n        $(document).off('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\r\n        $(document).off('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\r\n        $(this.options.clearFacetSelector).off('click', this.onClearFacet);\r\n\r\n        // Hooks\r\n        hooks.off('facetedSearch-facet-clicked', this.onFacetClick);\r\n        hooks.off('facetedSearch-range-submitted', this.onRangeSubmit);\r\n        hooks.off('sortBy-submitted', this.onSortBySubmit);\r\n    }\r\n\r\n    onClearFacet(event) {\r\n        const $link = $(event.currentTarget);\r\n        const url = $link.attr('href');\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        // Update URL\r\n        urlUtils.goToUrl(url);\r\n    }\r\n\r\n    onToggleClick(event) {\r\n        const $toggle = $(event.currentTarget);\r\n        const $navList = $($toggle.attr('href'));\r\n\r\n        // Prevent default\r\n        event.preventDefault();\r\n\r\n        // Toggle visible items\r\n        this.toggleFacetItems($navList);\r\n    }\r\n\r\n    onFacetClick(event) {\r\n        const $link = $(event.currentTarget);\r\n        const url = $link.attr('href');\r\n\r\n        event.preventDefault();\r\n\r\n        $link.toggleClass('is-selected');\r\n\r\n        // Update URL\r\n        urlUtils.goToUrl(url);\r\n\r\n        if (this.options.modalOpen) {\r\n            this.options.modal.close();\r\n        }\r\n    }\r\n\r\n    onSortBySubmit(event) {\r\n        const url = Url.parse(window.location.href, true);\r\n        const queryParams = $(event.currentTarget).serialize().split('=');\r\n\r\n        url.query[queryParams[0]] = queryParams[1];\r\n        delete url.query.page;\r\n\r\n        // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\r\n        const urlQueryParams = {};\r\n        Object.assign(urlQueryParams, url.query);\r\n\r\n        event.preventDefault();\r\n\r\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(urlQueryParams) }));\r\n    }\r\n\r\n    onRangeSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        if (!this.priceRangeValidator.areAll(nod.constants.VALID)) {\r\n            return;\r\n        }\r\n\r\n        const url = Url.parse(window.location.href, true);\r\n        let queryParams = decodeURI($(event.currentTarget).serialize()).split('&');\r\n        queryParams = urlUtils.parseQueryParams(queryParams);\r\n\r\n        for (const key in queryParams) {\r\n            if (queryParams.hasOwnProperty(key)) {\r\n                url.query[key] = queryParams[key];\r\n            }\r\n        }\r\n\r\n        // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\r\n        const urlQueryParams = {};\r\n        Object.assign(urlQueryParams, url.query);\r\n\r\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(urlQueryParams) }));\r\n    }\r\n\r\n    onStateChange() {\r\n        this.updateView();\r\n    }\r\n\r\n    onAccordionToggle(event) {\r\n        const $accordionToggle = $(event.currentTarget);\r\n        const collapsible = $accordionToggle.data('collapsibleInstance');\r\n        const id = collapsible.targetId;\r\n\r\n        if (collapsible.isCollapsed) {\r\n            this.collapsedFacets = _.union(this.collapsedFacets, [id]);\r\n        } else {\r\n            this.collapsedFacets = _.without(this.collapsedFacets, id);\r\n        }\r\n    }\r\n\r\n    onPopState() {\r\n        const currentUrl = window.location.href;\r\n        const searchParams = new URLSearchParams(currentUrl);\r\n        // If searchParams does not contain a page value then modify url query string to have page=1\r\n        if (!searchParams.has('page')) {\r\n            const linkUrl = $('.pagination-link').attr('href');\r\n            const re = /page=[0-9]+/i;\r\n            const updatedLinkUrl = linkUrl.replace(re, 'page=1');\r\n            window.history.replaceState({}, document.title, updatedLinkUrl);\r\n        }\r\n        $(window).trigger('statechange');\r\n    }\r\n}\r\n\r\nexport default FacetedSearch;\r\n"],"sourceRoot":""}