{"version":3,"sources":["webpack:///./assets/js/theme/product.js","webpack:///./assets/js/theme/common/models/forms.js","webpack:///./assets/js/theme/common/form-utils.js","webpack:///./node_modules/lodash/toString.js","webpack:///./node_modules/lodash/capitalize.js","webpack:///./node_modules/lodash/includes.js","webpack:///./node_modules/lodash/_hasUnicode.js","webpack:///./node_modules/lodash/camelCase.js","webpack:///./node_modules/lodash/_baseIndexOf.js","webpack:///./node_modules/lodash/upperFirst.js","webpack:///./node_modules/lodash/_createCaseFirst.js","webpack:///./node_modules/lodash/_castSlice.js","webpack:///./node_modules/lodash/_baseSlice.js","webpack:///./node_modules/lodash/_stringToArray.js","webpack:///./node_modules/lodash/_asciiToArray.js","webpack:///./node_modules/lodash/_unicodeToArray.js","webpack:///./node_modules/lodash/_createCompounder.js","webpack:///./node_modules/lodash/_arrayReduce.js","webpack:///./node_modules/lodash/deburr.js","webpack:///./node_modules/lodash/_baseToString.js","webpack:///./node_modules/lodash/words.js","webpack:///./node_modules/lodash/_asciiWords.js","webpack:///./node_modules/lodash/_hasUnicodeWord.js","webpack:///./node_modules/lodash/_unicodeWords.js","webpack:///./assets/js/theme/product/reviews.js","webpack:///./assets/js/theme/product/video-gallery.js"],"names":["Product","_PageManager","context","_this","call","url","window","location","href","$reviewLink","$","$bulkPricingLink","_proto","prototype","onReady","validator","_this2","document","on","indexOf","history","replaceState","title","pathname","collapsibleFactory","this","productDetails","ProductDetails","BCData","product_attributes","setProductVariant","videoGallery","$reviewForm","classifyForm","review","Review","registerValidation","performCheck","areAll","productReviewHandler","bulkPricingHandler","trigger","PageManager","forms","email","value","test","password","notEmpty","length","inputTagNames","formSelector","options","$form","$inputs","find","join","_options$formFieldCla","formFieldClass","each","__","input","specificClassName","$input","$formField","parent","tagName","prop","toLowerCase","className","inputType","_includes","_camelCase","_capitalize","addClass","classifyInput","insertStateHiddenField","$stateField","stateFieldAttrs","type","name","$field","fieldId","match","getFieldId","after","Validators","setEmailValidation","field","add","selector","validate","cb","val","errorMessage","setPasswordValidation","passwordSelector","password2Selector","requirements","isOptional","$password","passwordValidations","result","RegExp","alpha","numeric","minlength","error","setMinMaxPriceValidation","selectors","errorSelector","fieldsetSelector","maxPriceSelector","minPriceSelector","configure","form","preventSubmit","successClass","setMessageOptions","errorSpan","setStateCountryValidation","cleanUpStateValidation","$fieldClassElement","data","Object","keys","nod","classes","forEach","hasClass","removeClass","module","exports","toString","upperFirst","string","baseIndexOf","array","reHasUnicode","capitalize","camelCase","createCompounder","word","index","fromIndex","createCaseFirst","castSlice","hasUnicode","stringToArray","methodName","strSymbols","undefined","chr","charAt","trailing","slice","baseSlice","start","end","Array","asciiToArray","unicodeToArray","split","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsSeq","rsSymbol","reUnicode","arrayReduce","deburr","words","reApos","callback","replace","iteratee","accumulator","initAccum","baseToString","asciiWords","hasUnicodeWord","unicodeWords","pattern","guard","reAsciiWord","reHasUnicodeWord","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsUpper","rsMiscLower","rsMiscUpper","rsModifier","rsEmoji","reUnicodeWord","_default","submit","$reviewsContent","$collapsible","initLinkBind","injectPaginationLink","collapseReviews","$content","CollapsibleEvents","click","hash","$nextLink","$prevLink","attr","reviewRating","reviewSubject","reviewComment","reviewEmail","VideoGallery","$element","$player","$videos","currentVideo","bindEvents","selectNewVideo","e","preventDefault","$target","currentTarget","id","$selectedThumb","setMainVideo","setActiveThumb","bind","element","$el"],"mappings":"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","file":"theme-bundle.chunk.3.js","sourcesContent":["/*\n Import all product specific js\n */\nimport PageManager from './page-manager';\nimport Review from './product/reviews';\nimport collapsibleFactory from './common/collapsible';\nimport ProductDetails from './common/product-details';\nimport videoGallery from './product/video-gallery';\nimport { classifyForm } from './common/form-utils';\n\nexport default class Product extends PageManager {\n    constructor(context) {\n        super(context);\n        this.url = window.location.href;\n        this.$reviewLink = $('[data-reveal-id=\"modal-review-form\"]');\n        this.$bulkPricingLink = $('[data-reveal-id=\"modal-bulk-pricing\"]');\n    }\n\n    onReady() {\n        // Listen for foundation modal close events to sanitize URL after review.\n        $(document).on('close.fndtn.reveal', () => {\n            if (this.url.indexOf('#write_review') !== -1 && typeof window.history.replaceState === 'function') {\n                window.history.replaceState(null, document.title, window.location.pathname);\n            }\n        });\n\n        let validator;\n\n        // Init collapsible\n        collapsibleFactory();\n\n        this.productDetails = new ProductDetails($('.productView'), this.context, window.BCData.product_attributes);\n        this.productDetails.setProductVariant();\n\n        videoGallery();\n\n        const $reviewForm = classifyForm('.writeReview-form');\n        const review = new Review($reviewForm);\n\n        $('body').on('click', '[data-reveal-id=\"modal-review-form\"]', () => {\n            validator = review.registerValidation(this.context);\n        });\n\n        $reviewForm.on('submit', () => {\n            if (validator) {\n                validator.performCheck();\n                return validator.areAll('valid');\n            }\n\n            return false;\n        });\n\n        this.productReviewHandler();\n        this.bulkPricingHandler();\n    }\n\n    productReviewHandler() {\n        if (this.url.indexOf('#write_review') !== -1) {\n            this.$reviewLink.trigger('click');\n        }\n    }\n\n    bulkPricingHandler() {\n        if (this.url.indexOf('#bulk_pricing') !== -1) {\n            this.$bulkPricingLink.trigger('click');\n        }\n    }\n}\n","const forms = {\n    email(value) {\n        const re = /^.+@.+\\..+/;\n        return re.test(value);\n    },\n\n    /**\n     * Validates a password field\n     * @param value\n     * @returns {boolean}\n     */\n    password(value) {\n        return this.notEmpty(value);\n    },\n\n    /**\n     * validates if a field is empty\n     * @param value\n     * @returns {boolean}\n     *\n     */\n    notEmpty(value) {\n        return value.length > 0;\n    },\n};\n\nexport default forms;\n","import _ from 'lodash';\nimport nod from './nod';\nimport forms from './models/forms';\n\nconst inputTagNames = [\n    'input',\n    'select',\n    'textarea',\n];\n\n/**\n * Apply class name to an input element on its type\n * @param {object} input\n * @param {string} formFieldClass\n * @return {object} Element itself\n */\nfunction classifyInput(input, formFieldClass) {\n    const $input = $(input);\n    const $formField = $input.parent(`.${formFieldClass}`);\n    const tagName = $input.prop('tagName').toLowerCase();\n\n    let className = `${formFieldClass}--${tagName}`;\n    let specificClassName;\n\n    // Input can be text/checkbox/radio etc...\n    if (tagName === 'input') {\n        const inputType = $input.prop('type');\n\n        if (_.includes(['radio', 'checkbox', 'submit'], inputType)) {\n            // ie: .form-field--checkbox, .form-field--radio\n            className = `${formFieldClass}--${_.camelCase(inputType)}`;\n        } else {\n            // ie: .form-field--input .form-field--inputText\n            specificClassName = `${className}${_.capitalize(inputType)}`;\n        }\n    }\n\n    // Apply class modifier\n    return $formField\n        .addClass(className)\n        .addClass(specificClassName);\n}\n\n/**\n * Apply class name to each input element in a form based on its type\n * @example\n * // Before\n * <form id=\"form\">\n *     <div class=\"form-field\">\n *         <input type=\"text\">\n *     </div>\n *     <div class=\"form-field\">\n *         <select>...</select>\n *     </div>\n * </form>\n *\n * classifyForm('#form', { formFieldClass: 'form-field' });\n *\n * // After\n * <div class=\"form-field form-field--input form-field--inputText\">...</div>\n * <div class=\"form-field form-field--select\">...</div>\n *\n * @param {string|object} formSelector - selector or element\n * @param {object} options\n * @return {jQuery} Element itself\n */\nexport function classifyForm(formSelector, options = {}) {\n    const $form = $(formSelector);\n    const $inputs = $form.find(inputTagNames.join(', '));\n\n    // Obtain options\n    const { formFieldClass = 'form-field' } = options;\n\n    // Classify each input in a form\n    $inputs.each((__, input) => {\n        classifyInput(input, formFieldClass);\n    });\n\n    return $form;\n}\n\n/**\n * Get id from given field\n * @param {object} $field JQuery field object\n * @return {string}\n */\nfunction getFieldId($field) {\n    const fieldId = $field.prop('name').match(/(\\[.*\\])/);\n\n    if (fieldId && fieldId.length !== 0) {\n        return fieldId[0];\n    }\n\n    return '';\n}\n\n/**\n * Insert hidden field after State/Province field\n * @param {object} $stateField JQuery field object\n */\nfunction insertStateHiddenField($stateField) {\n    const fieldId = getFieldId($stateField);\n    const stateFieldAttrs = {\n        type: 'hidden',\n        name: `FormFieldIsText${fieldId}`,\n        value: '1',\n    };\n\n    $stateField.after($('<input />', stateFieldAttrs));\n}\n\nconst Validators = {\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     */\n    setEmailValidation: (validator, field) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: (cb, val) => {\n                    const result = forms.email(val);\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a valid email.',\n            });\n        }\n    },\n\n    /**\n     * Validate password fields\n     * @param validator\n     * @param passwordSelector\n     * @param password2Selector\n     * @param requirements\n     * @param isOptional\n     */\n    setPasswordValidation: (validator, passwordSelector, password2Selector, requirements, isOptional) => {\n        const $password = $(passwordSelector);\n        const passwordValidations = [\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a password.',\n            },\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.match(new RegExp(requirements.alpha))\n                        && val.match(new RegExp(requirements.numeric))\n                        && val.length >= requirements.minlength;\n\n                    // If optional and nothing entered, it is valid\n                    if (isOptional && val.length === 0) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: requirements.error,\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a password.',\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val === $password.val();\n\n                    cb(result);\n                },\n                errorMessage: 'Your passwords do not match.',\n            },\n        ];\n\n        validator.add(passwordValidations);\n    },\n\n    /**\n     * Validate password fields\n     * @param {Nod} validator\n     * @param {Object} selectors\n     * @param {string} selectors.errorSelector\n     * @param {string} selectors.fieldsetSelector\n     * @param {string} selectors.formSelector\n     * @param {string} selectors.maxPriceSelector\n     * @param {string} selectors.minPriceSelector\n     */\n    setMinMaxPriceValidation: (validator, selectors) => {\n        const {\n            errorSelector,\n            fieldsetSelector,\n            formSelector,\n            maxPriceSelector,\n            minPriceSelector,\n        } = selectors;\n\n        validator.configure({\n            form: formSelector,\n            preventSubmit: true,\n            successClass: '_', // KLUDGE: Don't apply success class\n        });\n\n        validator.add({\n            errorMessage: 'Min price must be less than max. price.',\n            selector: minPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: 'Min price must be less than max. price.',\n            selector: maxPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: 'Max. price is required.',\n            selector: maxPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: 'Min. price is required.',\n            selector: minPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: 'Input must be greater than 0.',\n            selector: [minPriceSelector, maxPriceSelector],\n            validate: 'min-number:0',\n        });\n\n        validator.setMessageOptions({\n            selector: [minPriceSelector, maxPriceSelector],\n            parent: fieldsetSelector,\n            errorSpan: errorSelector,\n        });\n    },\n\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     */\n    setStateCountryValidation: (validator, field) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: 'presence',\n                errorMessage: 'The \\'State/Province\\' field cannot be blank.',\n            });\n        }\n    },\n\n    /**\n     * Removes classes from dirty form if previously checked\n     * @param field\n     */\n    cleanUpStateValidation: (field) => {\n        const $fieldClassElement = $((`[data-type=\"${field.data('fieldType')}\"]`));\n\n        Object.keys(nod.classes).forEach((value) => {\n            if ($fieldClassElement.hasClass(nod.classes[value])) {\n                $fieldClassElement.removeClass(nod.classes[value]);\n            }\n        });\n    },\n};\n\nexport { Validators, insertStateHiddenField };\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","var capitalize = require('./capitalize'),\n    createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar--');\n * // => 'fooBar'\n *\n * _.camelCase('__FOO_BAR__');\n * // => 'fooBar'\n */\nvar camelCase = createCompounder(function(result, word, index) {\n  word = word.toLowerCase();\n  return result + (index ? capitalize(word) : word);\n});\n\nmodule.exports = camelCase;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","import nod from '../common/nod';\nimport { CollapsibleEvents } from '../common/collapsible';\nimport forms from '../common/models/forms';\n\nexport default class {\n    constructor($reviewForm) {\n        this.validator = nod({\n            submit: $reviewForm.find('input[type=\"submit\"]'),\n        });\n\n        this.$reviewsContent = $('#product-reviews');\n        this.$collapsible = $('[data-collapsible]', this.$reviewsContent);\n\n        this.initLinkBind();\n        this.injectPaginationLink();\n        this.collapseReviews();\n    }\n\n    /**\n     * On initial page load, the user clicks on \"(12 Reviews)\" link\n     * The browser jumps to the review page and should expand the reviews section\n     */\n    initLinkBind() {\n        const $content = $('#productReviews-content', this.$reviewsContent);\n\n        $('.productView-reviewLink').on('click', () => {\n            $('.productView-reviewTabLink').trigger('click');\n            if (!$content.hasClass('is-open')) {\n                this.$collapsible.trigger(CollapsibleEvents.click);\n            }\n        });\n    }\n\n    collapseReviews() {\n        // We're in paginating state, do not collapse\n        if (window.location.hash && window.location.hash.indexOf('#product-reviews') === 0) {\n            return;\n        }\n\n        // force collapse on page load\n        this.$collapsible.trigger(CollapsibleEvents.click);\n    }\n\n    /**\n     * Inject ID into the pagination link\n     */\n    injectPaginationLink() {\n        const $nextLink = $('.pagination-item--next .pagination-link', this.$reviewsContent);\n        const $prevLink = $('.pagination-item--previous .pagination-link', this.$reviewsContent);\n\n        if ($nextLink.length) {\n            $nextLink.attr('href', `${$nextLink.attr('href')} #product-reviews`);\n        }\n\n        if ($prevLink.length) {\n            $prevLink.attr('href', `${$prevLink.attr('href')} #product-reviews`);\n        }\n    }\n\n    registerValidation(context) {\n        this.context = context;\n        this.validator.add([{\n            selector: '[name=\"revrating\"]',\n            validate: 'presence',\n            errorMessage: this.context.reviewRating,\n        }, {\n            selector: '[name=\"revtitle\"]',\n            validate: 'presence',\n            errorMessage: this.context.reviewSubject,\n        }, {\n            selector: '[name=\"revtext\"]',\n            validate: 'presence',\n            errorMessage: this.context.reviewComment,\n        }, {\n            selector: '.writeReview-form [name=\"email\"]',\n            validate: (cb, val) => {\n                const result = forms.email(val);\n                cb(result);\n            },\n            errorMessage: this.context.reviewEmail,\n        }]);\n\n        return this.validator;\n    }\n\n    validate() {\n        return this.validator.performCheck();\n    }\n}\n","export class VideoGallery {\n    constructor($element) {\n        this.$player = $element.find('[data-video-player]');\n        this.$videos = $element.find('[data-video-item]');\n        this.currentVideo = {};\n        this.bindEvents();\n    }\n\n    selectNewVideo(e) {\n        e.preventDefault();\n\n        const $target = $(e.currentTarget);\n\n        this.currentVideo = {\n            id: $target.data('videoId'),\n            $selectedThumb: $target,\n        };\n\n        this.setMainVideo();\n        this.setActiveThumb();\n    }\n\n    setMainVideo() {\n        this.$player.attr('src', `//www.youtube.com/embed/${this.currentVideo.id}`);\n    }\n\n    setActiveThumb() {\n        this.$videos.removeClass('is-active');\n        this.currentVideo.$selectedThumb.addClass('is-active');\n    }\n\n    bindEvents() {\n        this.$videos.on('click', this.selectNewVideo.bind(this));\n    }\n}\n\nexport default function videoGallery() {\n    const pluginKey = 'video-gallery';\n    const $videoGallery = $(`[data-${pluginKey}]`);\n\n    $videoGallery.each((index, element) => {\n        const $el = $(element);\n        const isInitialized = $el.data(pluginKey) instanceof VideoGallery;\n\n        if (isInitialized) {\n            return;\n        }\n\n        $el.data(pluginKey, new VideoGallery($el));\n    });\n}\n"],"sourceRoot":""}